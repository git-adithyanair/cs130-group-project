name: Run unit tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
  test:
    name: Test
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.backend == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: backend
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: pw
          POSTGRES_DB: simple_bank
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.18

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin
          which migrate

      - name: Run migrations
        run: make migrateup

      - name: Test
        run: make test
